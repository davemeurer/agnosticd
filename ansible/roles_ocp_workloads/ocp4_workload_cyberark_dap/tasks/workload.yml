---
- name: Setting up CyberArk DAP workload for user
  debug:
    msg: "Setting up CyberArk DAP workload for user ocp_username = {{ ocp_username }}"

# CyberArk DAP workload tasks
# -------------------------------------------------------------------------

- name: Copy CyberArk config files
  copy:
    src: '{{item}}'
    dest: '/home/{{ansible_user}}/cyberark_setup/'
    mode: 0644
  loop:
    - ./files/dap_service_rhpds.config

- name: Copy CyberArk template files
  copy:
    src: '{{item}}'
    dest: '/home/{{ansible_user}}/cyberark_setup/templates/'
    mode: 0644
  loop:
    - ./files/templates/dap-config-map-manifest.template.yaml
    - ./files/templates/master-authenticator-policy.template.yaml
    - ./files/templates/master-deployment-manifest.template.yaml
    - ./files/templates/master-secrets-policy.template.yaml
    - ./files/templates/mysql.template.yaml    

- name: Copy CyberArk bash files
  copy:
    src: '{{item}}'
    dest: "/home/{{ansible_user}}/cyberark_setup/"
    mode: 0775
  loop:
    - ./files/get_cert_REST.sh
    - ./files/get_set.sh
    - ./files/load_policy.sh
    - ./files/master_deploy.sh
    - ./files/mysqldb_deploy.sh

- name: create CyberArk resorces
  k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - ./templates/namespace.j2
  - ./templates/service.j2
  - ./templates/dap_authn_role.j2
  - ./templates/role_binding.j2
  - ./templates/dap_cm_role.j2

- name: Add policy add-scc-to-user dap authn service
  command: "oc adm policy add-scc-to-user anyuid -z dap-authn-service -n {{ ocp4_workload_cyberark_project }}"

- name: Deploy cyberark conjur master
  command: "/home/{{ansible_user}}/cyberark_setup/master_deploy.sh {{ ocp4_workload_cyberark_project }}"

- name: Deploy mysqldb
  command: "/home/{{ansible_user}}/cyberark_setup/mysqldb_deploy.sh {{ ocp4_workload_cyberark_project }}"

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
